trigger:
- develop
- release/*

pool:
  name: 'DEVDEMO1US1'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  prerelease: false
  GitVersion.SemVer: ''

name: '$(Build.DefinitionName)-$(GitVersion.SemVer)'

steps:
- task: GitVersion@5
  inputs:
    runtime: 'full'
    configFilePath: 'GitVersion.yml'
    updateAssemblyInfo: true
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '4.4.1'

- task: NuGetCommand@2
  displayName: 'Restoring NuGet packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'
  condition: eq(variables['prerelease'], false)
- task: VSBuild@1
  displayName: 'Building Shared Solution'
  inputs:
    solution: '**/*.sln'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
- task: CopyFiles@2
  displayName: 'Copy Files Artifacts Directory'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: '**/nuspec/*.nuspec'
    versioningScheme: byEnvVar
    versionEnvVar: GitVersion.SemVer
    verbosityPack: Normal
- task: NuGetCommand@2
  displayName: 'NuGet push to sc-demo-packages'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), eq(variables['Build.Reason'], 'PullRequest')))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '6dbcd6d3-0de9-4da6-b48c-b699ab8f1c24'
    verbosityPush: 'Normal'
- task: NuGetCommand@2
  displayName: 'NuGet push to MyGet (public!) feed'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['prerelease'], false))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Sitecore.Demo.Shared.*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'nuget-external'
    verbosityPush: 'Normal'
  enabled: true