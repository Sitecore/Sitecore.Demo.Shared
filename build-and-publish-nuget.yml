trigger:
- master
- develop

pool:
  name: 'DEVDEMO1US1'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  prerelease: false
  GitVersion.SemVer: ''

name: '$(Build.DefinitionName)-$(GitVersion.SemVer)'

steps:
- task: GitVersion@5
  inputs:
    runtime: 'full'
    configFilePath: 'GitVersion.yml'
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '4.4.1'

- task: NuGetCommand@2
  displayName: 'Restoring NuGet packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/Sitecore.Demo.Shared.sln'
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'
  condition: eq(variables['prerelease'], false)
# - task: NuGetCommand@2
#   displayName: 'Restoring Foundation nuget packages'
#   inputs:
#     command: 'restore'
#     restoreSolution: '**/Sitecore.Demo.Foundation.sln'
#     feedsToUse: 'config'
#     nugetConfigPath: 'nuget.config'
#     versioningScheme: 'off'
#     externalFeedCredentials: 'vsts-sc-demo-packages'
#   condition: eq(variables['prerelease'], true)
- task: VSBuild@1
  displayName: 'Building Shared Solution'
  inputs:
    solution: '**/Sitecore.Demo.Shared.sln'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
- task: CopyFiles@2
  displayName: 'Copy Files Artifacts Directory'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: '**/nuspec/*.nuspec'
    versioningScheme: byEnvVar
    versionEnvVar: GitVersion.SemVer
    verbosityPack: Normal
# - task: NuGetCommand@2
#   displayName: 'NuGet push'
#   inputs:
#     command: push
#     nuGetFeedType: external
#     publishFeedCredentials: 'nuget-external'
#     verbosityPush: Normal
